@page
@model IMSWebPortal.Pages.Inventory.UpdateQtyModel
@{
    ViewData["Title"] = "Update Qty";
}

<h4>@ViewData["Title"]</h4>
<partial name="./Shared/_StatusMessage" model="Model.StatusMessage" />
<div id="UpdateQtyDiv" class="row">
    <div class="col-md-12">

        <form id="profile-form" method="post">

            <dv>
                <table id="ItemQtyUpdateTable" class="oktable">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(e => Model.ItemDetils.FirstOrDefault().Name)</th>
                            <th>@Html.DisplayNameFor(e => Model.ItemDetils.FirstOrDefault().Sku)</th>
                            <th>@Html.DisplayNameFor(e => Model.ItemDetils.FirstOrDefault().Price)</th>
                            <th>@Html.DisplayNameFor(e => Model.ItemDetils.FirstOrDefault().Qty)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var itemRecord in Model.ItemDetils)
                        {
                        <tr>
                            <td>@Html.DisplayFor(e => itemRecord.Name)</td>
                            <td>@Html.DisplayFor(e => itemRecord.Sku, new {@id = "Sku_" + @itemRecord.Id })</td>
                            <td>@Html.DisplayFor(e => itemRecord.Price)</td>
                            <td>
                                @Html.TextBoxFor(e => itemRecord.Qty, new { @id = "QtyBox_" + @itemRecord.Id, @type = "number", @min = "0", @class = "numberbox", @onkeyup = "CheckQty(this," + @itemRecord.Id + ")" })
                                <br />
                                <span id='QtyError_@itemRecord.Id' class="errorlable"></span>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </dv>

            <div>
                <button id="updateInvBtn" class="btn btn-primary right savebtn" v-on:click="UpdateQty">Update</button>
            </div>

        </form>
    </div>
</div>

@section Scripts {

    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
    <link rel="stylesheet" href="~/css/empite.css" />

    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.min.js" asp-append-version="true"></script>

    <script>


        var app = new Vue({

            el: "#UpdateQtyDiv",
            data: {},
            methods: {
                UpdateQty: function (e) {


                    //var table = document.getElementById("ItemQtyUpdateTable");
                    //var ItemDetils = [];
                    //for (var r = 1; r < table.rows.length; r++) {
                    //    var itemRecord = {};
                    //    itemRecord.Id = 0;
                    //    itemRecord.Name = table.rows[r].cells[0].innerHTML;
                    //    itemRecord.Sku = table.rows[r].cells[1].innerHTML;
                    //    itemRecord.Price = table.rows[r].cells[2].innerHTML;
                    //    itemRecord.Qty = table.rows[r].cells[3].children[0].value;
                    //    itemRecord.IsDeleted = 0;
                    //    ItemDetils.push(itemRecord);
                    //}

                    var ItemDetils = [];
                    var itemRecord = {};
                    itemRecord.Id = 1;
                    itemRecord.Name = "test";
                    itemRecord.Sku = "sku";
                    itemRecord.Price = 0.12;
                    itemRecord.Qty = 50;
                    itemRecord.IsDeleted = true;
                    ItemDetils.push(itemRecord);


                    $.ajax({
                        type: 'GET',
                        url: '?handler=Submit',
                        data: { itemDetailsModel: JSON.stringify(ItemDetils) },
                        dataType: 'json',
                        success: function (data) {
                            debugger;
                            if (data == true) {
                                alert("Successfully created new user");
                                location.reload();
                            }
                            else {
                                alert("Save faild!");
                            }
                        },
                        error: function (error) {
                            alert("Error: " + error);
                        }
                    })


                }
            }

        });



        function CheckQty(obj, id) {
            if (obj.value.indexOf(".") != -1) {
                ValidateQty(true, id);
            } else if (parseInt(obj.value) < 0) {
                ValidateQty(true, id);
            } else {
                ValidateQty(false, id);
            }
        }

        function ValidateQty(isError, id) {
            if (isError) {
                document.getElementById("QtyError_" + id).innerHTML = "Please enter a valid qty";
                document.getElementById("updateInvBtn").disabled = true;
            } else {
                document.getElementById("QtyError_" + id).innerHTML = "";
                document.getElementById("updateInvBtn").disabled = false;
            } 
        }
    </script>
}
