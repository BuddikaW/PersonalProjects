@page
@model IMSWebPortal.Pages.ManageInventory.IndexModel

@{
    ViewData["Title"] = "Item Details";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h2>@ViewData["Title"]</h2>
<partial name="./Shared/_StatusMessage" model="Model.StatusMessage" />


<div id='app' class="row">
    <div class="col-md-12">

        @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
        {
            <div class="row">
                <div class="col-md-12">
                    <p>
                        <a asp-page="Create">Add New Item</a>
                    </p>
                </div>
            </div>
        }

        <form id="profile-form" method="post">

            <div>
                <input type="hidden" id="deleteId" v-model="deleteId" />
                <table id="ItemListTable" class="oktable">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(e => Model.ItemDetils.FirstOrDefault().Name)</th>
                            <th>@Html.DisplayNameFor(e => Model.ItemDetils.FirstOrDefault().Sku)</th>
                            <th>@Html.DisplayNameFor(e => Model.ItemDetils.FirstOrDefault().Price)</th>
                            <th>@Html.DisplayNameFor(e => Model.ItemDetils.FirstOrDefault().Qty)</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var itemRecord in Model.ItemDetils)
                        {
                            <tr>
                                <td>@Html.DisplayFor(e => itemRecord.Name)</td>
                                <td>@Html.DisplayFor(e => itemRecord.Sku)</td>
                                <td>@Html.DisplayFor(e => itemRecord.Price)</td>
                                <td>@Html.DisplayFor(e => itemRecord.Qty)</td>
                                <td>
                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                    {
                                        <a asp-page="./Edit" asp-route-id="@itemRecord.Id">Edit</a>
                                        <span> | </span>
                                        <a asp-page="./Details" asp-route-id="@itemRecord.Id">Details</a>
                                        <span> | </span>
                                        <a class="linkfeel" data-toggle="modal" data-target="#exampleModal" v-on:click="SelectDeleteItem(@itemRecord.Id)">Delete</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </form>

    </div>

    <!-- Modal -->
    <div class="modal fade bd-example-modal-sm" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body">
                    Are you sure you want to delete this item?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-sm btn-primary" data-dismiss="modal" v-on:click="DeleteItem()">Yes</button>
                </div>
            </div>

        </div>
    </div>

</div>

@section Scripts {

    <script>

        var vueApp = new Vue({
            el: '#app',
            data: {
                deleteId: 0
            },
            methods: {
                SelectDeleteItem: function (id) {
                    this.deleteId = id;
                },
                DeleteItem: function () {
                    var headers = {
                        "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                    }
                    axios.post('/ManageInventory/Index/?id=' + this.deleteId, null, { headers: headers })
                        .then(response => {location.reload();})
                        .catch(error => alert(error));
                }
            }
        })

    </script>

}
